{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Disciplina Reposit\u00f3rio com o conte\u00fado das disciplinas GPP e MDS do curso Engenharia de Software da Universidade de Bras\u00edlia No reposit\u00f3rio encontra todo o material did\u00e1tico disponibilizado para a disciplina. \u201cThe best way to find out if you can trust somebody is to trust them.\u201d Ernest Hemingway Trust is the bedrock of all effective teams. When it exists, team members speak freely, don\u2019t second guess each other and formal hierarchy fades into the distance. Motiva\u00e7\u00e3o Um pouco da Metodologia Estrutura da Disciplina Motiva\u00e7\u00e3o Para o projeto multidisciplinar foi necess\u00e1rio a integra\u00e7\u00e3o entre os estudantes da disciplina de GPP e MDS . Gest\u00e3o de Portf\u00f3lios e Projetos de Software \u00e9 uma disciplina que visa dar ao estudante uma gama de conhecimentos e t\u00e9cnicas, com o intuito de permitir a boa gest\u00e3o estrat\u00e9gica de projetos de software . Isso transpassa a gest\u00e3o de escopo, tempo, custos, qualidade e diversos outros contextos do projeto. M\u00e9todos de Desenvolvimento de Software , \u00e9 uma disciplina que trabalha no estudante conhecimentos relativos a diferentes modelos de ciclo de vida para um projeto de software . Faz com que o estudante seja estimulado a compreender os diferentes aspectos de cada modelo, identificando suas caracter\u00edsticas e quando usar um em detrimento de outro. Sendo assim, o projeto visa utilizar ambas as disciplinas com o intuito de produzir um software , onde os estudantes s\u00e3o estimulados a utilizar n\u00e3o apenas o conhecimento adquirido nas disciplinas, mas em toda a sua caminhada pela faculdade at\u00e9 o momento. Um Pouco da Metodologia Os estudantes se dividem em grupos, mesclando estudantes que estejam cursando ambas as disciplinas. Cada grupo seleciona um tema e deve chegar ao fim do semestre com um software . A produ\u00e7\u00e3o desse software \u00e9 acompanhada pelo professor e por uma equipe de monitores, afim de auxiliar os grupos. Outro ponto importante \u00e9 que durante o desenvolvimento dos projetos de cada grupo, em um dado momento, o modelo de produ\u00e7\u00e3o de software deve ser alterado. Os grupos iniciam a produ\u00e7\u00e3o utilizando metodologias tradicionais (PMBOK/RUP) e, na metade do semestre, os modelos metodol\u00f3gicos de desenvolvimento a serem adotados passam a ser os \u00e1geis (SCRUM/XP). Dessa forma, o estudante tem a possibilidade de vivenciar ambas as metodologias. Estrutura do Curso Etapas do curso","title":"Disciplina"},{"location":"#disciplina","text":"Reposit\u00f3rio com o conte\u00fado das disciplinas GPP e MDS do curso Engenharia de Software da Universidade de Bras\u00edlia No reposit\u00f3rio encontra todo o material did\u00e1tico disponibilizado para a disciplina.","title":"Disciplina"},{"location":"#the-best-way-to-find-out-if-you-can-trust-somebody-is-to-trust-them-ernest-hemingway","text":"Trust is the bedrock of all effective teams. When it exists, team members speak freely, don\u2019t second guess each other and formal hierarchy fades into the distance. Motiva\u00e7\u00e3o Um pouco da Metodologia Estrutura da Disciplina","title":"\u201cThe best way to find out if you can trust somebody is to trust them.\u201d Ernest Hemingway"},{"location":"#motivacao","text":"Para o projeto multidisciplinar foi necess\u00e1rio a integra\u00e7\u00e3o entre os estudantes da disciplina de GPP e MDS . Gest\u00e3o de Portf\u00f3lios e Projetos de Software \u00e9 uma disciplina que visa dar ao estudante uma gama de conhecimentos e t\u00e9cnicas, com o intuito de permitir a boa gest\u00e3o estrat\u00e9gica de projetos de software . Isso transpassa a gest\u00e3o de escopo, tempo, custos, qualidade e diversos outros contextos do projeto. M\u00e9todos de Desenvolvimento de Software , \u00e9 uma disciplina que trabalha no estudante conhecimentos relativos a diferentes modelos de ciclo de vida para um projeto de software . Faz com que o estudante seja estimulado a compreender os diferentes aspectos de cada modelo, identificando suas caracter\u00edsticas e quando usar um em detrimento de outro. Sendo assim, o projeto visa utilizar ambas as disciplinas com o intuito de produzir um software , onde os estudantes s\u00e3o estimulados a utilizar n\u00e3o apenas o conhecimento adquirido nas disciplinas, mas em toda a sua caminhada pela faculdade at\u00e9 o momento.","title":"Motiva\u00e7\u00e3o"},{"location":"#um-pouco-da-metodologia","text":"Os estudantes se dividem em grupos, mesclando estudantes que estejam cursando ambas as disciplinas. Cada grupo seleciona um tema e deve chegar ao fim do semestre com um software . A produ\u00e7\u00e3o desse software \u00e9 acompanhada pelo professor e por uma equipe de monitores, afim de auxiliar os grupos. Outro ponto importante \u00e9 que durante o desenvolvimento dos projetos de cada grupo, em um dado momento, o modelo de produ\u00e7\u00e3o de software deve ser alterado. Os grupos iniciam a produ\u00e7\u00e3o utilizando metodologias tradicionais (PMBOK/RUP) e, na metade do semestre, os modelos metodol\u00f3gicos de desenvolvimento a serem adotados passam a ser os \u00e1geis (SCRUM/XP). Dessa forma, o estudante tem a possibilidade de vivenciar ambas as metodologias.","title":"Um Pouco da Metodologia"},{"location":"#estrutura-do-curso","text":"Etapas do curso","title":"Estrutura do Curso"},{"location":"mds/","text":"MDS - Metodologia de Desenvolvimento de Software Bem vindo a MDS 1. O que \u00e9 Processo de Desenvolvimento de Software Para Pressman um processo \u00e9 um conjunto de atividades, a\u00e7\u00f5es e tarefas realizadas na cria\u00e7\u00e3o de um produto de trabalho ( work product ). Uma atividade esfor\u00e7a-se para atingir um objetivo amplo (por exemplo, comunicar-\u00adse com os interessados) e \u00e9 utilizada independentemente do campo de aplica\u00e7\u00e3o, do tamanho do projeto, da complexidade de esfor\u00e7os ou do grau de rigor com que a engenharia de software ser\u00e1 aplicada. Na engenharia de software , um processo n\u00e3o \u00e9 uma prescri\u00e7\u00e3o r\u00edgida de como desenvolver um software , mas sim uma abordagem adapt\u00e1vel que possibilita \u00e0s pessoas (a equipe de software ) realizarem o trabalho de selecionar e escolher o conjunto apropriado de a\u00e7\u00f5es e tarefas. 2. O que \u00e9 modelo de processo de software \u00c9 uma representa\u00e7\u00e3o abstrata de um processo de software . Cada modelo representa um processo a partir de uma perspectiva particular. Modelos de processo de software s\u00e3o utilizados para explicar diferentes abordagens do desenvolvimento de software . Definem a sequ\u00eancia em que as atividades do processo ser\u00e3o realizadas. N\u00e3o s\u00e3o descri\u00e7\u00f5es definitivas de processo, mas sim abstra\u00e7\u00f5es \u00fateis, que podem ser usadas em diferentes abordagens. 3. Fases do ciclo de vida de software Levantamento de Requisitos: Define as funcionalidades e as necessidades do produto, resultando no escopo e no documento de vis\u00e3o. Podemos separar os requisitos em tr\u00eas categorias: Funcionais: S\u00e3o os requisitos relacionados \u00e0s funcionalidades do software ; N\u00e3o Funcionais: S\u00e3o os requisitos relacionados \u00e0s necessidades do software ; Inversos: S\u00e3o os requisitos que definem o que o software n\u00e3o pode fazer. O objetivo de levantar requisitos \u00e9 guiar o desenvolvimento para que o sistema correto seja feito. Para isso, \u00e9 necess\u00e1rio descrever as condi\u00e7\u00f5es e capacidades do sistema bem o suficiente, de forma a ter um acordo entre cliente e os desenvolvedores do sistema, no quesito do que o sistema deve ou n\u00e3o fazer. O grande desafio dessa etapa \u00e9 que o cliente, mesmo que n\u00e3o seja um especialista da \u00e1rea de computa\u00e7\u00e3o, deve ser capaz de ler e entender os resultados da captura de requisitos. O resultado do levantamento de requisitos tamb\u00e9m ajuda o gestor do projeto a planejar o cronograma do projeto (JACOBSON,2007). Design /Projeto: A atividade de design compreende todo o esfor\u00e7o de concep\u00e7\u00e3o e modelagem que t\u00eam por objetivo descrever como o software ser\u00e1 implementado. O design inclui: O design conceitual: Que envolve a elabora\u00e7\u00e3o das ideias e conceitos b\u00e1sicos que determinam os elementos fundamentais do software em quest\u00e3o. O design conceitual t\u00eam influ\u00eancia na interface do usu\u00e1rio e na arquitetura do software . O design da interface do usu\u00e1rio: Envolve a elabora\u00e7\u00e3o da maneira como o usu\u00e1rio pode interagir para realizar suas tarefas, a escolha dos objetos de interfaces , o layout de janelas e telas, etc. A interface deve garantir a boa usabilidade do software . O design da arquitetura do software : Deve elaborar uma vis\u00e3o macrosc\u00f3pica do software em termos de componentes que interagem entre si. Design dos algoritmos e estruturas de dados: Visa determinar, de maneira independente da linguagem de programa\u00e7\u00e3o adotada, as solu\u00e7\u00f5es algor\u00edtmicas e as estruturas de dados associadas. A fase de Design ou Projeto, \u00e9 a fase final do processo de planejamento e resulta no documento de arquitetura. Implementa\u00e7\u00e3o: Envolve as atividades de codifica\u00e7\u00e3o, compila\u00e7\u00e3o, integra\u00e7\u00e3o e testes. A codifica\u00e7\u00e3o visa traduzir o design em um programa, utilizando linguagens e ferramentas adequadas. A codifica\u00e7\u00e3o deve refletir a estrutura e o comportamento descrito no design . Os componentes arquiteturais devem ser codificados de forma independente e depois integrados. Os testes podem ser iniciados durante a fase de implementa\u00e7\u00e3o. A depura\u00e7\u00e3o de erros ocorre durante a programa\u00e7\u00e3o utilizando algumas t\u00e9cnicas e ferramentas. \u00c9 fundamental um controle e gerenciamento de vers\u00f5es para que se tenha um controle correto de tudo o que est\u00e1 sendo codificado. Verifica\u00e7\u00e3o e Valida\u00e7\u00e3o: Destinam-se a mostrar que o sistema est\u00e1 de acordo com a especifica\u00e7\u00e3o e que ele atende \u00e0s expectativas de clientes e usu\u00e1rios. A valida\u00e7\u00e3o visa assegurar se o programa est\u00e1 fazendo aquilo que foi definido na sua especifica\u00e7\u00e3o. A verifica\u00e7\u00e3o visa verificar se o programa est\u00e1 correto, isto \u00e9, n\u00e3o possui erros de execu\u00e7\u00e3o. Os testes s\u00e3o para corre\u00e7\u00e3o, desempenho e confiabilidade, garantindo a qualidade do software . Manuten\u00e7\u00e3o: A parte de manuten\u00e7\u00e3o envolve melhorar o software a demanda do(s) cliente(s), seja por falhas do programa ou simplesmente por melhorias que o cliente precisa. 3.1 Objetivos de cada fase do ciclo de vida de software Levantamento de Requisitos : Essa fase tem como objetivo unificar a vis\u00e3o do cliente e dos desenvolvedores. Para que isso aconte\u00e7a, s\u00e3o analisados diversos fatores, como por exemplo as funcionalidades que o produto deve possuir, al\u00e9m do objetivo final do produto. Essas an\u00e1lises s\u00e3o feitas de maneira que os desenvolvedores tenham uma vis\u00e3o detalhada do que deve ser produzido. Design Geral : Essa fase consiste no detalhamento de como o software ser\u00e1 desenvolvido, ou seja, a linguagem que ser\u00e1 utilizada, assim como a arquitetura que o projeto dever\u00e1 seguir. Feito isso, espera-se que todos os desenvolvedores tenham vis\u00f5es semelhantes do que deve ser produzido, assim como a maneira que essa produ\u00e7\u00e3o deve ocorrer. Essa etapa \u00e9 crucial, pois sem ela, \u00e9 poss\u00edvel que o projeto inteiro falhe por diverg\u00eancias de vis\u00f5es entre os desenvolvedores. 4. Estudo de caso da influ\u00eancia do modelo de processo no sucesso de um projeto Resumo do texto: (e podem sugerir outros casos) What Successful Project Managers Do. Atualmente, gerentes de projeto combinam m\u00e9todos tradicionais e \u00e1geis, visando mais flexibilidade e melhores resultados. Gerentes de projeto sempre enfrentar\u00e3o situa\u00e7\u00f5es inesperadas, mesmo tendo o melhor planejamento e gerenciamento de riscos poss\u00edvel. Situa\u00e7\u00f5es como por exemplo, falta de empregados, a fal\u00eancia de um fornecedor, ou mudan\u00e7as de requisitos por parte do cliente. 5. Refer\u00eancias Jacobson, I., Booch, G., Rumbaugh, J., Rumbaugh, J., Booch, G. The unified software development process . Reading: Addison-wesley, 2007.","title":"MDS - Metodologia de Desenvolvimento de Software"},{"location":"mds/#mds-metodologia-de-desenvolvimento-de-software","text":"","title":"MDS - Metodologia de Desenvolvimento de Software"},{"location":"mds/#bem-vindo-a-mds","text":"","title":"Bem vindo a MDS"},{"location":"mds/#1-o-que-e-processo-de-desenvolvimento-de-software","text":"Para Pressman um processo \u00e9 um conjunto de atividades, a\u00e7\u00f5es e tarefas realizadas na cria\u00e7\u00e3o de um produto de trabalho ( work product ). Uma atividade esfor\u00e7a-se para atingir um objetivo amplo (por exemplo, comunicar-\u00adse com os interessados) e \u00e9 utilizada independentemente do campo de aplica\u00e7\u00e3o, do tamanho do projeto, da complexidade de esfor\u00e7os ou do grau de rigor com que a engenharia de software ser\u00e1 aplicada. Na engenharia de software , um processo n\u00e3o \u00e9 uma prescri\u00e7\u00e3o r\u00edgida de como desenvolver um software , mas sim uma abordagem adapt\u00e1vel que possibilita \u00e0s pessoas (a equipe de software ) realizarem o trabalho de selecionar e escolher o conjunto apropriado de a\u00e7\u00f5es e tarefas.","title":"1. O que \u00e9 Processo de Desenvolvimento de Software"},{"location":"mds/#2-o-que-e-modelo-de-processo-de-software","text":"\u00c9 uma representa\u00e7\u00e3o abstrata de um processo de software . Cada modelo representa um processo a partir de uma perspectiva particular. Modelos de processo de software s\u00e3o utilizados para explicar diferentes abordagens do desenvolvimento de software . Definem a sequ\u00eancia em que as atividades do processo ser\u00e3o realizadas. N\u00e3o s\u00e3o descri\u00e7\u00f5es definitivas de processo, mas sim abstra\u00e7\u00f5es \u00fateis, que podem ser usadas em diferentes abordagens.","title":"2. O que \u00e9 modelo de processo de software"},{"location":"mds/#3-fases-do-ciclo-de-vida-de-software","text":"Levantamento de Requisitos: Define as funcionalidades e as necessidades do produto, resultando no escopo e no documento de vis\u00e3o. Podemos separar os requisitos em tr\u00eas categorias: Funcionais: S\u00e3o os requisitos relacionados \u00e0s funcionalidades do software ; N\u00e3o Funcionais: S\u00e3o os requisitos relacionados \u00e0s necessidades do software ; Inversos: S\u00e3o os requisitos que definem o que o software n\u00e3o pode fazer. O objetivo de levantar requisitos \u00e9 guiar o desenvolvimento para que o sistema correto seja feito. Para isso, \u00e9 necess\u00e1rio descrever as condi\u00e7\u00f5es e capacidades do sistema bem o suficiente, de forma a ter um acordo entre cliente e os desenvolvedores do sistema, no quesito do que o sistema deve ou n\u00e3o fazer. O grande desafio dessa etapa \u00e9 que o cliente, mesmo que n\u00e3o seja um especialista da \u00e1rea de computa\u00e7\u00e3o, deve ser capaz de ler e entender os resultados da captura de requisitos. O resultado do levantamento de requisitos tamb\u00e9m ajuda o gestor do projeto a planejar o cronograma do projeto (JACOBSON,2007). Design /Projeto: A atividade de design compreende todo o esfor\u00e7o de concep\u00e7\u00e3o e modelagem que t\u00eam por objetivo descrever como o software ser\u00e1 implementado. O design inclui: O design conceitual: Que envolve a elabora\u00e7\u00e3o das ideias e conceitos b\u00e1sicos que determinam os elementos fundamentais do software em quest\u00e3o. O design conceitual t\u00eam influ\u00eancia na interface do usu\u00e1rio e na arquitetura do software . O design da interface do usu\u00e1rio: Envolve a elabora\u00e7\u00e3o da maneira como o usu\u00e1rio pode interagir para realizar suas tarefas, a escolha dos objetos de interfaces , o layout de janelas e telas, etc. A interface deve garantir a boa usabilidade do software . O design da arquitetura do software : Deve elaborar uma vis\u00e3o macrosc\u00f3pica do software em termos de componentes que interagem entre si. Design dos algoritmos e estruturas de dados: Visa determinar, de maneira independente da linguagem de programa\u00e7\u00e3o adotada, as solu\u00e7\u00f5es algor\u00edtmicas e as estruturas de dados associadas. A fase de Design ou Projeto, \u00e9 a fase final do processo de planejamento e resulta no documento de arquitetura. Implementa\u00e7\u00e3o: Envolve as atividades de codifica\u00e7\u00e3o, compila\u00e7\u00e3o, integra\u00e7\u00e3o e testes. A codifica\u00e7\u00e3o visa traduzir o design em um programa, utilizando linguagens e ferramentas adequadas. A codifica\u00e7\u00e3o deve refletir a estrutura e o comportamento descrito no design . Os componentes arquiteturais devem ser codificados de forma independente e depois integrados. Os testes podem ser iniciados durante a fase de implementa\u00e7\u00e3o. A depura\u00e7\u00e3o de erros ocorre durante a programa\u00e7\u00e3o utilizando algumas t\u00e9cnicas e ferramentas. \u00c9 fundamental um controle e gerenciamento de vers\u00f5es para que se tenha um controle correto de tudo o que est\u00e1 sendo codificado. Verifica\u00e7\u00e3o e Valida\u00e7\u00e3o: Destinam-se a mostrar que o sistema est\u00e1 de acordo com a especifica\u00e7\u00e3o e que ele atende \u00e0s expectativas de clientes e usu\u00e1rios. A valida\u00e7\u00e3o visa assegurar se o programa est\u00e1 fazendo aquilo que foi definido na sua especifica\u00e7\u00e3o. A verifica\u00e7\u00e3o visa verificar se o programa est\u00e1 correto, isto \u00e9, n\u00e3o possui erros de execu\u00e7\u00e3o. Os testes s\u00e3o para corre\u00e7\u00e3o, desempenho e confiabilidade, garantindo a qualidade do software . Manuten\u00e7\u00e3o: A parte de manuten\u00e7\u00e3o envolve melhorar o software a demanda do(s) cliente(s), seja por falhas do programa ou simplesmente por melhorias que o cliente precisa.","title":"3. Fases do ciclo de vida de software"},{"location":"mds/#31-objetivos-de-cada-fase-do-ciclo-de-vida-de-software","text":"Levantamento de Requisitos : Essa fase tem como objetivo unificar a vis\u00e3o do cliente e dos desenvolvedores. Para que isso aconte\u00e7a, s\u00e3o analisados diversos fatores, como por exemplo as funcionalidades que o produto deve possuir, al\u00e9m do objetivo final do produto. Essas an\u00e1lises s\u00e3o feitas de maneira que os desenvolvedores tenham uma vis\u00e3o detalhada do que deve ser produzido. Design Geral : Essa fase consiste no detalhamento de como o software ser\u00e1 desenvolvido, ou seja, a linguagem que ser\u00e1 utilizada, assim como a arquitetura que o projeto dever\u00e1 seguir. Feito isso, espera-se que todos os desenvolvedores tenham vis\u00f5es semelhantes do que deve ser produzido, assim como a maneira que essa produ\u00e7\u00e3o deve ocorrer. Essa etapa \u00e9 crucial, pois sem ela, \u00e9 poss\u00edvel que o projeto inteiro falhe por diverg\u00eancias de vis\u00f5es entre os desenvolvedores.","title":"3.1 Objetivos de cada fase do ciclo de vida de software"},{"location":"mds/#4-estudo-de-caso-da-influencia-do-modelo-de-processo-no-sucesso-de-um-projeto","text":"Resumo do texto: (e podem sugerir outros casos) What Successful Project Managers Do. Atualmente, gerentes de projeto combinam m\u00e9todos tradicionais e \u00e1geis, visando mais flexibilidade e melhores resultados. Gerentes de projeto sempre enfrentar\u00e3o situa\u00e7\u00f5es inesperadas, mesmo tendo o melhor planejamento e gerenciamento de riscos poss\u00edvel. Situa\u00e7\u00f5es como por exemplo, falta de empregados, a fal\u00eancia de um fornecedor, ou mudan\u00e7as de requisitos por parte do cliente.","title":"4. Estudo de caso da influ\u00eancia do modelo de processo no sucesso de um projeto"},{"location":"mds/#5-referencias","text":"Jacobson, I., Booch, G., Rumbaugh, J., Rumbaugh, J., Booch, G. The unified software development process . Reading: Addison-wesley, 2007.","title":"5. Refer\u00eancias"},{"location":"eps/","text":"EPS - Engenharia de Produto de Software Bem vindo a EPS O plano de Ensino na disciplina pode ser encontrado aqui . O que \u00e9 projeto? De acordo com o PMBOK: \u201cUm projeto \u00e9 um esfor\u00e7o tempor\u00e1rio empreendido para criar um produto, servi\u00e7o ou resultado exclusivo. Os projetos e as opera\u00e7\u00f5es diferem, principalmente, no fato de que os projetos s\u00e3o tempor\u00e1rios e exclusivos, enquanto as opera\u00e7\u00f5es s\u00e3o cont\u00ednuas e repetitivas.\u201d Segundo a ABNT, na norma t\u00e9cnica NBR 10006, Projeto \u00e9 \u201cProcesso \u00fanico, consistindo de um grupo de atividades coordenadas e controladas com datas para in\u00edcio e t\u00e9rmino, empreendido para alcance de um objetivo conforme requisitos espec\u00edficos, incluindo limita\u00e7\u00f5es de tempo, custo e recursos.\u201d De acordo com o Project Management Institute (PMBOK, 2013), Projeto \u00e9 \u201cUm esfor\u00e7o tempor\u00e1rio empreendido para criar um produto, servi\u00e7o ou resultado \u00fanico.\u201d Em resumo, projeto \u00e9 um evento que possui um in\u00edcio, meio e um fim bem definidos. O que o diferencia de uma opera\u00e7\u00e3o, que \u00e9 uma tarefa do dia a dia e n\u00e3o se tem o conhecimento de quando ela n\u00e3o mais ser\u00e1 necess\u00e1ria, algo rotineiro. Segundo Pressman, para que um projeto de software seja bem sucedido, \u00e9 necess\u00e1rio que alguns par\u00e2metros sejam corretamente analisados, como por exemplo, o escopo do software, os riscos envolvidos, os recursos necess\u00e1rios, as tarefas a serem realizadas, os indicadores a serem acompanhados, os esfor\u00e7os e custos aplicados e a sistem\u00e1tica a ser seguida. A an\u00e1lise de todos estes par\u00e2metros seria a fun\u00e7\u00e3o t\u00edpica do gerenciamento de projetos, qual, em geral, se inicia antes do trabalho t\u00e9cnico e prossegue \u00e0 medida que a entrega do software vai se concretizando. Projeto busca atingir um objetivo claro, sendo conduzido por pessoas e possuindo par\u00e2metros bem definidos de tempo, custo, recursos envolvidos e qualidade. PMBOK Na defini\u00e7\u00e3o do Guia PMBOK\u00ae (2013), gerenciamento de projetos \u00e9 \u201ca aplica\u00e7\u00e3o de conhecimentos, habilidades, ferramentas e t\u00e9cnicas \u00e0s atividades do projeto, fim de atender os requisitos das partes interessadas\u201d. Para Vargas (2009) \u201co gerenciamento de projetos pode ser aplicado a qualquer situa\u00e7\u00e3o onde exista um empreendimento que foge ao que \u00e9 fixo e rotineiro na empresa (ad hoc)\u201d. Satisfazer ou exceder as necessidades envolve equilibrar as v\u00e1rias demandas concorrentes em rela\u00e7\u00e3o ao: * Escopo, tempo, custo e qualidade; * Partes interessadas com necessidades e expectativas diferenciadas; e * Requisitos identificados (necessidades) e requisitos n\u00e3o identificados (expectativas). Para cobrir todas as \u00e1reas que fazem parte da ger\u00eancia de projetos o Guia PMBOK\u00ae dividiu-as em grupos de processos, conforme a figura a seguir. Caracter\u00edsticas de um projeto: Temporariedade Individualidade Empreendimento n\u00e3o repetitivo Sequ\u00eancia clara e l\u00f3gica In\u00edcio, meio e fim Elabora\u00e7\u00e3o progressiva Qual o papel do gerente de projeto? A fun\u00e7\u00e3o de um gerente de projetos \u00e9 planejar, controlar e executar projetos que podem ter um tempo determinado, com uma data para come\u00e7ar e acabar, ou que podem ser a longo prazo, como o objetivo de neg\u00f3cio de uma empresa, por exemplo. Durante o andamento de um projeto, esse profissional \u00e9 respons\u00e1vel por atribuir pap\u00e9is, tarefas, acompanhar e documentar o andamento da equipe por meio de ferramentas e t\u00e9cnicas apuradas, administrar investimentos e integrar as pessoas para trabalharem juntas por um s\u00f3 objetivo. Al\u00e9m de monitorar poss\u00edveis riscos e estar sempre preparado para mudan\u00e7as. O que gerentes de projetos bem sucedidos fazem? A partir do seguinte texto: What Successful Project Managers Do Atualmente, gerentes de projeto combinam m\u00e9todos tradicionais e \u00e1geis, visando mais flexibilidade e melhores resultados. Gerentes de projeto sempre enfrentar\u00e3o situa\u00e7\u00f5es inesperadas, mesmo tendo o melhor planejamento e gerenciamento de riscos poss\u00edvel. Situa\u00e7\u00f5es como por exemplo, falta de empregados, a fal\u00eancia de um fornecedor, ou mudan\u00e7as de requisitos por parte do cliente. Quais s\u00e3o os principais motivos do fracasso de projetos? Vi\u00e9s: otimismo, custos afundados, confirma\u00e7\u00e3o/in\u00e9rcia. Pouco ou nenhum planejamento. N\u00e3o h\u00e1 li\u00e7\u00f5es aprendidas de projetos passados. Falta de treinamento em ger\u00eancia de projeto. Falta de treino de novas tecnologias. Falta de lideran\u00e7a ou comprometimento dos Stakeholders. Mudan\u00e7a no modelo de gest\u00e3o Da gest\u00e3o tradicional (PMBok) para gest\u00e3o \u00e1gil - baseada na leitura - https://hbr.org/2016/05/embracing-agile","title":"Sobre"},{"location":"eps/#eps-engenharia-de-produto-de-software","text":"","title":"EPS - Engenharia de Produto de Software"},{"location":"eps/#bem-vindo-a-eps","text":"O plano de Ensino na disciplina pode ser encontrado aqui .","title":"Bem vindo a EPS"},{"location":"eps/#o-que-e-projeto","text":"De acordo com o PMBOK: \u201cUm projeto \u00e9 um esfor\u00e7o tempor\u00e1rio empreendido para criar um produto, servi\u00e7o ou resultado exclusivo. Os projetos e as opera\u00e7\u00f5es diferem, principalmente, no fato de que os projetos s\u00e3o tempor\u00e1rios e exclusivos, enquanto as opera\u00e7\u00f5es s\u00e3o cont\u00ednuas e repetitivas.\u201d Segundo a ABNT, na norma t\u00e9cnica NBR 10006, Projeto \u00e9 \u201cProcesso \u00fanico, consistindo de um grupo de atividades coordenadas e controladas com datas para in\u00edcio e t\u00e9rmino, empreendido para alcance de um objetivo conforme requisitos espec\u00edficos, incluindo limita\u00e7\u00f5es de tempo, custo e recursos.\u201d De acordo com o Project Management Institute (PMBOK, 2013), Projeto \u00e9 \u201cUm esfor\u00e7o tempor\u00e1rio empreendido para criar um produto, servi\u00e7o ou resultado \u00fanico.\u201d Em resumo, projeto \u00e9 um evento que possui um in\u00edcio, meio e um fim bem definidos. O que o diferencia de uma opera\u00e7\u00e3o, que \u00e9 uma tarefa do dia a dia e n\u00e3o se tem o conhecimento de quando ela n\u00e3o mais ser\u00e1 necess\u00e1ria, algo rotineiro. Segundo Pressman, para que um projeto de software seja bem sucedido, \u00e9 necess\u00e1rio que alguns par\u00e2metros sejam corretamente analisados, como por exemplo, o escopo do software, os riscos envolvidos, os recursos necess\u00e1rios, as tarefas a serem realizadas, os indicadores a serem acompanhados, os esfor\u00e7os e custos aplicados e a sistem\u00e1tica a ser seguida. A an\u00e1lise de todos estes par\u00e2metros seria a fun\u00e7\u00e3o t\u00edpica do gerenciamento de projetos, qual, em geral, se inicia antes do trabalho t\u00e9cnico e prossegue \u00e0 medida que a entrega do software vai se concretizando. Projeto busca atingir um objetivo claro, sendo conduzido por pessoas e possuindo par\u00e2metros bem definidos de tempo, custo, recursos envolvidos e qualidade.","title":"O que \u00e9 projeto?"},{"location":"eps/#pmbok","text":"Na defini\u00e7\u00e3o do Guia PMBOK\u00ae (2013), gerenciamento de projetos \u00e9 \u201ca aplica\u00e7\u00e3o de conhecimentos, habilidades, ferramentas e t\u00e9cnicas \u00e0s atividades do projeto, fim de atender os requisitos das partes interessadas\u201d. Para Vargas (2009) \u201co gerenciamento de projetos pode ser aplicado a qualquer situa\u00e7\u00e3o onde exista um empreendimento que foge ao que \u00e9 fixo e rotineiro na empresa (ad hoc)\u201d. Satisfazer ou exceder as necessidades envolve equilibrar as v\u00e1rias demandas concorrentes em rela\u00e7\u00e3o ao: * Escopo, tempo, custo e qualidade; * Partes interessadas com necessidades e expectativas diferenciadas; e * Requisitos identificados (necessidades) e requisitos n\u00e3o identificados (expectativas). Para cobrir todas as \u00e1reas que fazem parte da ger\u00eancia de projetos o Guia PMBOK\u00ae dividiu-as em grupos de processos, conforme a figura a seguir. Caracter\u00edsticas de um projeto: Temporariedade Individualidade Empreendimento n\u00e3o repetitivo Sequ\u00eancia clara e l\u00f3gica In\u00edcio, meio e fim Elabora\u00e7\u00e3o progressiva","title":"PMBOK"},{"location":"eps/#qual-o-papel-do-gerente-de-projeto","text":"A fun\u00e7\u00e3o de um gerente de projetos \u00e9 planejar, controlar e executar projetos que podem ter um tempo determinado, com uma data para come\u00e7ar e acabar, ou que podem ser a longo prazo, como o objetivo de neg\u00f3cio de uma empresa, por exemplo. Durante o andamento de um projeto, esse profissional \u00e9 respons\u00e1vel por atribuir pap\u00e9is, tarefas, acompanhar e documentar o andamento da equipe por meio de ferramentas e t\u00e9cnicas apuradas, administrar investimentos e integrar as pessoas para trabalharem juntas por um s\u00f3 objetivo. Al\u00e9m de monitorar poss\u00edveis riscos e estar sempre preparado para mudan\u00e7as.","title":"Qual o papel do gerente de projeto?"},{"location":"eps/#o-que-gerentes-de-projetos-bem-sucedidos-fazem","text":"A partir do seguinte texto: What Successful Project Managers Do Atualmente, gerentes de projeto combinam m\u00e9todos tradicionais e \u00e1geis, visando mais flexibilidade e melhores resultados. Gerentes de projeto sempre enfrentar\u00e3o situa\u00e7\u00f5es inesperadas, mesmo tendo o melhor planejamento e gerenciamento de riscos poss\u00edvel. Situa\u00e7\u00f5es como por exemplo, falta de empregados, a fal\u00eancia de um fornecedor, ou mudan\u00e7as de requisitos por parte do cliente.","title":"O que gerentes de projetos bem sucedidos fazem?"},{"location":"eps/#quais-sao-os-principais-motivos-do-fracasso-de-projetos","text":"Vi\u00e9s: otimismo, custos afundados, confirma\u00e7\u00e3o/in\u00e9rcia. Pouco ou nenhum planejamento. N\u00e3o h\u00e1 li\u00e7\u00f5es aprendidas de projetos passados. Falta de treinamento em ger\u00eancia de projeto. Falta de treino de novas tecnologias. Falta de lideran\u00e7a ou comprometimento dos Stakeholders.","title":"Quais s\u00e3o os principais motivos do fracasso de projetos?"},{"location":"eps/#mudanca-no-modelo-de-gestao","text":"Da gest\u00e3o tradicional (PMBok) para gest\u00e3o \u00e1gil - baseada na leitura - https://hbr.org/2016/05/embracing-agile","title":"Mudan\u00e7a no modelo de gest\u00e3o"},{"location":"mds/","text":"MDS - Metodologia de Desenvolvimento de Software Bem vindo a MDS 1. O que \u00e9 Processo de Desenvolvimento de Software Para Pressman um processo \u00e9 um conjunto de atividades, a\u00e7\u00f5es e tarefas realizadas na cria\u00e7\u00e3o de um produto de trabalho ( work product ). Uma atividade esfor\u00e7a-se para atingir um objetivo amplo (por exemplo, comunicar-\u00adse com os interessados) e \u00e9 utilizada independentemente do campo de aplica\u00e7\u00e3o, do tamanho do projeto, da complexidade de esfor\u00e7os ou do grau de rigor com que a engenharia de software ser\u00e1 aplicada. Na engenharia de software , um processo n\u00e3o \u00e9 uma prescri\u00e7\u00e3o r\u00edgida de como desenvolver um software , mas sim uma abordagem adapt\u00e1vel que possibilita \u00e0s pessoas (a equipe de software ) realizarem o trabalho de selecionar e escolher o conjunto apropriado de a\u00e7\u00f5es e tarefas. 2. O que \u00e9 modelo de processo de software \u00c9 uma representa\u00e7\u00e3o abstrata de um processo de software . Cada modelo representa um processo a partir de uma perspectiva particular. Modelos de processo de software s\u00e3o utilizados para explicar diferentes abordagens do desenvolvimento de software . Definem a sequ\u00eancia em que as atividades do processo ser\u00e3o realizadas. N\u00e3o s\u00e3o descri\u00e7\u00f5es definitivas de processo, mas sim abstra\u00e7\u00f5es \u00fateis, que podem ser usadas em diferentes abordagens. 3. Fases do ciclo de vida de software Levantamento de Requisitos: Define as funcionalidades e as necessidades do produto, resultando no escopo e no documento de vis\u00e3o. Podemos separar os requisitos em tr\u00eas categorias: Funcionais: S\u00e3o os requisitos relacionados \u00e0s funcionalidades do software ; N\u00e3o Funcionais: S\u00e3o os requisitos relacionados \u00e0s necessidades do software ; Inversos: S\u00e3o os requisitos que definem o que o software n\u00e3o pode fazer. O objetivo de levantar requisitos \u00e9 guiar o desenvolvimento para que o sistema correto seja feito. Para isso, \u00e9 necess\u00e1rio descrever as condi\u00e7\u00f5es e capacidades do sistema bem o suficiente, de forma a ter um acordo entre cliente e os desenvolvedores do sistema, no quesito do que o sistema deve ou n\u00e3o fazer. O grande desafio dessa etapa \u00e9 que o cliente, mesmo que n\u00e3o seja um especialista da \u00e1rea de computa\u00e7\u00e3o, deve ser capaz de ler e entender os resultados da captura de requisitos. O resultado do levantamento de requisitos tamb\u00e9m ajuda o gestor do projeto a planejar o cronograma do projeto (JACOBSON,2007). Design /Projeto: A atividade de design compreende todo o esfor\u00e7o de concep\u00e7\u00e3o e modelagem que t\u00eam por objetivo descrever como o software ser\u00e1 implementado. O design inclui: O design conceitual: Que envolve a elabora\u00e7\u00e3o das ideias e conceitos b\u00e1sicos que determinam os elementos fundamentais do software em quest\u00e3o. O design conceitual t\u00eam influ\u00eancia na interface do usu\u00e1rio e na arquitetura do software . O design da interface do usu\u00e1rio: Envolve a elabora\u00e7\u00e3o da maneira como o usu\u00e1rio pode interagir para realizar suas tarefas, a escolha dos objetos de interfaces , o layout de janelas e telas, etc. A interface deve garantir a boa usabilidade do software . O design da arquitetura do software : Deve elaborar uma vis\u00e3o macrosc\u00f3pica do software em termos de componentes que interagem entre si. Design dos algoritmos e estruturas de dados: Visa determinar, de maneira independente da linguagem de programa\u00e7\u00e3o adotada, as solu\u00e7\u00f5es algor\u00edtmicas e as estruturas de dados associadas. A fase de Design ou Projeto, \u00e9 a fase final do processo de planejamento e resulta no documento de arquitetura. Implementa\u00e7\u00e3o: Envolve as atividades de codifica\u00e7\u00e3o, compila\u00e7\u00e3o, integra\u00e7\u00e3o e testes. A codifica\u00e7\u00e3o visa traduzir o design em um programa, utilizando linguagens e ferramentas adequadas. A codifica\u00e7\u00e3o deve refletir a estrutura e o comportamento descrito no design . Os componentes arquiteturais devem ser codificados de forma independente e depois integrados. Os testes podem ser iniciados durante a fase de implementa\u00e7\u00e3o. A depura\u00e7\u00e3o de erros ocorre durante a programa\u00e7\u00e3o utilizando algumas t\u00e9cnicas e ferramentas. \u00c9 fundamental um controle e gerenciamento de vers\u00f5es para que se tenha um controle correto de tudo o que est\u00e1 sendo codificado. Verifica\u00e7\u00e3o e Valida\u00e7\u00e3o: Destinam-se a mostrar que o sistema est\u00e1 de acordo com a especifica\u00e7\u00e3o e que ele atende \u00e0s expectativas de clientes e usu\u00e1rios. A valida\u00e7\u00e3o visa assegurar se o programa est\u00e1 fazendo aquilo que foi definido na sua especifica\u00e7\u00e3o. A verifica\u00e7\u00e3o visa verificar se o programa est\u00e1 correto, isto \u00e9, n\u00e3o possui erros de execu\u00e7\u00e3o. Os testes s\u00e3o para corre\u00e7\u00e3o, desempenho e confiabilidade, garantindo a qualidade do software . Manuten\u00e7\u00e3o: A parte de manuten\u00e7\u00e3o envolve melhorar o software a demanda do(s) cliente(s), seja por falhas do programa ou simplesmente por melhorias que o cliente precisa. 3.1 Objetivos de cada fase do ciclo de vida de software Levantamento de Requisitos : Essa fase tem como objetivo unificar a vis\u00e3o do cliente e dos desenvolvedores. Para que isso aconte\u00e7a, s\u00e3o analisados diversos fatores, como por exemplo as funcionalidades que o produto deve possuir, al\u00e9m do objetivo final do produto. Essas an\u00e1lises s\u00e3o feitas de maneira que os desenvolvedores tenham uma vis\u00e3o detalhada do que deve ser produzido. Design Geral : Essa fase consiste no detalhamento de como o software ser\u00e1 desenvolvido, ou seja, a linguagem que ser\u00e1 utilizada, assim como a arquitetura que o projeto dever\u00e1 seguir. Feito isso, espera-se que todos os desenvolvedores tenham vis\u00f5es semelhantes do que deve ser produzido, assim como a maneira que essa produ\u00e7\u00e3o deve ocorrer. Essa etapa \u00e9 crucial, pois sem ela, \u00e9 poss\u00edvel que o projeto inteiro falhe por diverg\u00eancias de vis\u00f5es entre os desenvolvedores. 4. Estudo de caso da influ\u00eancia do modelo de processo no sucesso de um projeto Resumo do texto: (e podem sugerir outros casos) What Successful Project Managers Do. Atualmente, gerentes de projeto combinam m\u00e9todos tradicionais e \u00e1geis, visando mais flexibilidade e melhores resultados. Gerentes de projeto sempre enfrentar\u00e3o situa\u00e7\u00f5es inesperadas, mesmo tendo o melhor planejamento e gerenciamento de riscos poss\u00edvel. Situa\u00e7\u00f5es como por exemplo, falta de empregados, a fal\u00eancia de um fornecedor, ou mudan\u00e7as de requisitos por parte do cliente. 5. Refer\u00eancias Jacobson, I., Booch, G., Rumbaugh, J., Rumbaugh, J., Booch, G. The unified software development process . Reading: Addison-wesley, 2007.","title":"Sobre"},{"location":"mds/#mds-metodologia-de-desenvolvimento-de-software","text":"","title":"MDS - Metodologia de Desenvolvimento de Software"},{"location":"mds/#bem-vindo-a-mds","text":"","title":"Bem vindo a MDS"},{"location":"mds/#1-o-que-e-processo-de-desenvolvimento-de-software","text":"Para Pressman um processo \u00e9 um conjunto de atividades, a\u00e7\u00f5es e tarefas realizadas na cria\u00e7\u00e3o de um produto de trabalho ( work product ). Uma atividade esfor\u00e7a-se para atingir um objetivo amplo (por exemplo, comunicar-\u00adse com os interessados) e \u00e9 utilizada independentemente do campo de aplica\u00e7\u00e3o, do tamanho do projeto, da complexidade de esfor\u00e7os ou do grau de rigor com que a engenharia de software ser\u00e1 aplicada. Na engenharia de software , um processo n\u00e3o \u00e9 uma prescri\u00e7\u00e3o r\u00edgida de como desenvolver um software , mas sim uma abordagem adapt\u00e1vel que possibilita \u00e0s pessoas (a equipe de software ) realizarem o trabalho de selecionar e escolher o conjunto apropriado de a\u00e7\u00f5es e tarefas.","title":"1. O que \u00e9 Processo de Desenvolvimento de Software"},{"location":"mds/#2-o-que-e-modelo-de-processo-de-software","text":"\u00c9 uma representa\u00e7\u00e3o abstrata de um processo de software . Cada modelo representa um processo a partir de uma perspectiva particular. Modelos de processo de software s\u00e3o utilizados para explicar diferentes abordagens do desenvolvimento de software . Definem a sequ\u00eancia em que as atividades do processo ser\u00e3o realizadas. N\u00e3o s\u00e3o descri\u00e7\u00f5es definitivas de processo, mas sim abstra\u00e7\u00f5es \u00fateis, que podem ser usadas em diferentes abordagens.","title":"2. O que \u00e9 modelo de processo de software"},{"location":"mds/#3-fases-do-ciclo-de-vida-de-software","text":"Levantamento de Requisitos: Define as funcionalidades e as necessidades do produto, resultando no escopo e no documento de vis\u00e3o. Podemos separar os requisitos em tr\u00eas categorias: Funcionais: S\u00e3o os requisitos relacionados \u00e0s funcionalidades do software ; N\u00e3o Funcionais: S\u00e3o os requisitos relacionados \u00e0s necessidades do software ; Inversos: S\u00e3o os requisitos que definem o que o software n\u00e3o pode fazer. O objetivo de levantar requisitos \u00e9 guiar o desenvolvimento para que o sistema correto seja feito. Para isso, \u00e9 necess\u00e1rio descrever as condi\u00e7\u00f5es e capacidades do sistema bem o suficiente, de forma a ter um acordo entre cliente e os desenvolvedores do sistema, no quesito do que o sistema deve ou n\u00e3o fazer. O grande desafio dessa etapa \u00e9 que o cliente, mesmo que n\u00e3o seja um especialista da \u00e1rea de computa\u00e7\u00e3o, deve ser capaz de ler e entender os resultados da captura de requisitos. O resultado do levantamento de requisitos tamb\u00e9m ajuda o gestor do projeto a planejar o cronograma do projeto (JACOBSON,2007). Design /Projeto: A atividade de design compreende todo o esfor\u00e7o de concep\u00e7\u00e3o e modelagem que t\u00eam por objetivo descrever como o software ser\u00e1 implementado. O design inclui: O design conceitual: Que envolve a elabora\u00e7\u00e3o das ideias e conceitos b\u00e1sicos que determinam os elementos fundamentais do software em quest\u00e3o. O design conceitual t\u00eam influ\u00eancia na interface do usu\u00e1rio e na arquitetura do software . O design da interface do usu\u00e1rio: Envolve a elabora\u00e7\u00e3o da maneira como o usu\u00e1rio pode interagir para realizar suas tarefas, a escolha dos objetos de interfaces , o layout de janelas e telas, etc. A interface deve garantir a boa usabilidade do software . O design da arquitetura do software : Deve elaborar uma vis\u00e3o macrosc\u00f3pica do software em termos de componentes que interagem entre si. Design dos algoritmos e estruturas de dados: Visa determinar, de maneira independente da linguagem de programa\u00e7\u00e3o adotada, as solu\u00e7\u00f5es algor\u00edtmicas e as estruturas de dados associadas. A fase de Design ou Projeto, \u00e9 a fase final do processo de planejamento e resulta no documento de arquitetura. Implementa\u00e7\u00e3o: Envolve as atividades de codifica\u00e7\u00e3o, compila\u00e7\u00e3o, integra\u00e7\u00e3o e testes. A codifica\u00e7\u00e3o visa traduzir o design em um programa, utilizando linguagens e ferramentas adequadas. A codifica\u00e7\u00e3o deve refletir a estrutura e o comportamento descrito no design . Os componentes arquiteturais devem ser codificados de forma independente e depois integrados. Os testes podem ser iniciados durante a fase de implementa\u00e7\u00e3o. A depura\u00e7\u00e3o de erros ocorre durante a programa\u00e7\u00e3o utilizando algumas t\u00e9cnicas e ferramentas. \u00c9 fundamental um controle e gerenciamento de vers\u00f5es para que se tenha um controle correto de tudo o que est\u00e1 sendo codificado. Verifica\u00e7\u00e3o e Valida\u00e7\u00e3o: Destinam-se a mostrar que o sistema est\u00e1 de acordo com a especifica\u00e7\u00e3o e que ele atende \u00e0s expectativas de clientes e usu\u00e1rios. A valida\u00e7\u00e3o visa assegurar se o programa est\u00e1 fazendo aquilo que foi definido na sua especifica\u00e7\u00e3o. A verifica\u00e7\u00e3o visa verificar se o programa est\u00e1 correto, isto \u00e9, n\u00e3o possui erros de execu\u00e7\u00e3o. Os testes s\u00e3o para corre\u00e7\u00e3o, desempenho e confiabilidade, garantindo a qualidade do software . Manuten\u00e7\u00e3o: A parte de manuten\u00e7\u00e3o envolve melhorar o software a demanda do(s) cliente(s), seja por falhas do programa ou simplesmente por melhorias que o cliente precisa.","title":"3. Fases do ciclo de vida de software"},{"location":"mds/#31-objetivos-de-cada-fase-do-ciclo-de-vida-de-software","text":"Levantamento de Requisitos : Essa fase tem como objetivo unificar a vis\u00e3o do cliente e dos desenvolvedores. Para que isso aconte\u00e7a, s\u00e3o analisados diversos fatores, como por exemplo as funcionalidades que o produto deve possuir, al\u00e9m do objetivo final do produto. Essas an\u00e1lises s\u00e3o feitas de maneira que os desenvolvedores tenham uma vis\u00e3o detalhada do que deve ser produzido. Design Geral : Essa fase consiste no detalhamento de como o software ser\u00e1 desenvolvido, ou seja, a linguagem que ser\u00e1 utilizada, assim como a arquitetura que o projeto dever\u00e1 seguir. Feito isso, espera-se que todos os desenvolvedores tenham vis\u00f5es semelhantes do que deve ser produzido, assim como a maneira que essa produ\u00e7\u00e3o deve ocorrer. Essa etapa \u00e9 crucial, pois sem ela, \u00e9 poss\u00edvel que o projeto inteiro falhe por diverg\u00eancias de vis\u00f5es entre os desenvolvedores.","title":"3.1 Objetivos de cada fase do ciclo de vida de software"},{"location":"mds/#4-estudo-de-caso-da-influencia-do-modelo-de-processo-no-sucesso-de-um-projeto","text":"Resumo do texto: (e podem sugerir outros casos) What Successful Project Managers Do. Atualmente, gerentes de projeto combinam m\u00e9todos tradicionais e \u00e1geis, visando mais flexibilidade e melhores resultados. Gerentes de projeto sempre enfrentar\u00e3o situa\u00e7\u00f5es inesperadas, mesmo tendo o melhor planejamento e gerenciamento de riscos poss\u00edvel. Situa\u00e7\u00f5es como por exemplo, falta de empregados, a fal\u00eancia de um fornecedor, ou mudan\u00e7as de requisitos por parte do cliente.","title":"4. Estudo de caso da influ\u00eancia do modelo de processo no sucesso de um projeto"},{"location":"mds/#5-referencias","text":"Jacobson, I., Booch, G., Rumbaugh, J., Rumbaugh, J., Booch, G. The unified software development process . Reading: Addison-wesley, 2007.","title":"5. Refer\u00eancias"},{"location":"mds/notas/","text":"MDS - Metodologia de Desenvolvimento de Software Bem vindo a MDS 1. O que \u00e9 Processo de Desenvolvimento de Software Para Pressman um processo \u00e9 um conjunto de atividades, a\u00e7\u00f5es e tarefas realizadas na cria\u00e7\u00e3o de um produto de trabalho ( work product ). Uma atividade esfor\u00e7a-se para atingir um objetivo amplo (por exemplo, comunicar-\u00adse com os interessados) e \u00e9 utilizada independentemente do campo de aplica\u00e7\u00e3o, do tamanho do projeto, da complexidade de esfor\u00e7os ou do grau de rigor com que a engenharia de software ser\u00e1 aplicada. Na engenharia de software , um processo n\u00e3o \u00e9 uma prescri\u00e7\u00e3o r\u00edgida de como desenvolver um software , mas sim uma abordagem adapt\u00e1vel que possibilita \u00e0s pessoas (a equipe de software ) realizarem o trabalho de selecionar e escolher o conjunto apropriado de a\u00e7\u00f5es e tarefas. 2. O que \u00e9 modelo de processo de software \u00c9 uma representa\u00e7\u00e3o abstrata de um processo de software . Cada modelo representa um processo a partir de uma perspectiva particular. Modelos de processo de software s\u00e3o utilizados para explicar diferentes abordagens do desenvolvimento de software . Definem a sequ\u00eancia em que as atividades do processo ser\u00e3o realizadas. N\u00e3o s\u00e3o descri\u00e7\u00f5es definitivas de processo, mas sim abstra\u00e7\u00f5es \u00fateis, que podem ser usadas em diferentes abordagens. 3. Fases do ciclo de vida de software Levantamento de Requisitos: Define as funcionalidades e as necessidades do produto, resultando no escopo e no documento de vis\u00e3o. Podemos separar os requisitos em tr\u00eas categorias: Funcionais: S\u00e3o os requisitos relacionados \u00e0s funcionalidades do software ; N\u00e3o Funcionais: S\u00e3o os requisitos relacionados \u00e0s necessidades do software ; Inversos: S\u00e3o os requisitos que definem o que o software n\u00e3o pode fazer. O objetivo de levantar requisitos \u00e9 guiar o desenvolvimento para que o sistema correto seja feito. Para isso, \u00e9 necess\u00e1rio descrever as condi\u00e7\u00f5es e capacidades do sistema bem o suficiente, de forma a ter um acordo entre cliente e os desenvolvedores do sistema, no quesito do que o sistema deve ou n\u00e3o fazer. O grande desafio dessa etapa \u00e9 que o cliente, mesmo que n\u00e3o seja um especialista da \u00e1rea de computa\u00e7\u00e3o, deve ser capaz de ler e entender os resultados da captura de requisitos. O resultado do levantamento de requisitos tamb\u00e9m ajuda o gestor do projeto a planejar o cronograma do projeto (JACOBSON,2007). Design /Projeto: A atividade de design compreende todo o esfor\u00e7o de concep\u00e7\u00e3o e modelagem que t\u00eam por objetivo descrever como o software ser\u00e1 implementado. O design inclui: O design conceitual: Que envolve a elabora\u00e7\u00e3o das ideias e conceitos b\u00e1sicos que determinam os elementos fundamentais do software em quest\u00e3o. O design conceitual t\u00eam influ\u00eancia na interface do usu\u00e1rio e na arquitetura do software . O design da interface do usu\u00e1rio: Envolve a elabora\u00e7\u00e3o da maneira como o usu\u00e1rio pode interagir para realizar suas tarefas, a escolha dos objetos de interfaces , o layout de janelas e telas, etc. A interface deve garantir a boa usabilidade do software . O design da arquitetura do software : Deve elaborar uma vis\u00e3o macrosc\u00f3pica do software em termos de componentes que interagem entre si. Design dos algoritmos e estruturas de dados: Visa determinar, de maneira independente da linguagem de programa\u00e7\u00e3o adotada, as solu\u00e7\u00f5es algor\u00edtmicas e as estruturas de dados associadas. A fase de Design ou Projeto, \u00e9 a fase final do processo de planejamento e resulta no documento de arquitetura. Implementa\u00e7\u00e3o: Envolve as atividades de codifica\u00e7\u00e3o, compila\u00e7\u00e3o, integra\u00e7\u00e3o e testes. A codifica\u00e7\u00e3o visa traduzir o design em um programa, utilizando linguagens e ferramentas adequadas. A codifica\u00e7\u00e3o deve refletir a estrutura e o comportamento descrito no design . Os componentes arquiteturais devem ser codificados de forma independente e depois integrados. Os testes podem ser iniciados durante a fase de implementa\u00e7\u00e3o. A depura\u00e7\u00e3o de erros ocorre durante a programa\u00e7\u00e3o utilizando algumas t\u00e9cnicas e ferramentas. \u00c9 fundamental um controle e gerenciamento de vers\u00f5es para que se tenha um controle correto de tudo o que est\u00e1 sendo codificado. Verifica\u00e7\u00e3o e Valida\u00e7\u00e3o: Destinam-se a mostrar que o sistema est\u00e1 de acordo com a especifica\u00e7\u00e3o e que ele atende \u00e0s expectativas de clientes e usu\u00e1rios. A valida\u00e7\u00e3o visa assegurar se o programa est\u00e1 fazendo aquilo que foi definido na sua especifica\u00e7\u00e3o. A verifica\u00e7\u00e3o visa verificar se o programa est\u00e1 correto, isto \u00e9, n\u00e3o possui erros de execu\u00e7\u00e3o. Os testes s\u00e3o para corre\u00e7\u00e3o, desempenho e confiabilidade, garantindo a qualidade do software . Manuten\u00e7\u00e3o: A parte de manuten\u00e7\u00e3o envolve melhorar o software a demanda do(s) cliente(s), seja por falhas do programa ou simplesmente por melhorias que o cliente precisa. 3.1 Objetivos de cada fase do ciclo de vida de software Levantamento de Requisitos : Essa fase tem como objetivo unificar a vis\u00e3o do cliente e dos desenvolvedores. Para que isso aconte\u00e7a, s\u00e3o analisados diversos fatores, como por exemplo as funcionalidades que o produto deve possuir, al\u00e9m do objetivo final do produto. Essas an\u00e1lises s\u00e3o feitas de maneira que os desenvolvedores tenham uma vis\u00e3o detalhada do que deve ser produzido. Design Geral : Essa fase consiste no detalhamento de como o software ser\u00e1 desenvolvido, ou seja, a linguagem que ser\u00e1 utilizada, assim como a arquitetura que o projeto dever\u00e1 seguir. Feito isso, espera-se que todos os desenvolvedores tenham vis\u00f5es semelhantes do que deve ser produzido, assim como a maneira que essa produ\u00e7\u00e3o deve ocorrer. Essa etapa \u00e9 crucial, pois sem ela, \u00e9 poss\u00edvel que o projeto inteiro falhe por diverg\u00eancias de vis\u00f5es entre os desenvolvedores. 4. Estudo de caso da influ\u00eancia do modelo de processo no sucesso de um projeto Resumo do texto: (e podem sugerir outros casos) What Successful Project Managers Do. Atualmente, gerentes de projeto combinam m\u00e9todos tradicionais e \u00e1geis, visando mais flexibilidade e melhores resultados. Gerentes de projeto sempre enfrentar\u00e3o situa\u00e7\u00f5es inesperadas, mesmo tendo o melhor planejamento e gerenciamento de riscos poss\u00edvel. Situa\u00e7\u00f5es como por exemplo, falta de empregados, a fal\u00eancia de um fornecedor, ou mudan\u00e7as de requisitos por parte do cliente. 5. Refer\u00eancias Jacobson, I., Booch, G., Rumbaugh, J., Rumbaugh, J., Booch, G. The unified software development process . Reading: Addison-wesley, 2007.","title":"MDS - Metodologia de Desenvolvimento de Software"},{"location":"mds/notas/#mds-metodologia-de-desenvolvimento-de-software","text":"","title":"MDS - Metodologia de Desenvolvimento de Software"},{"location":"mds/notas/#bem-vindo-a-mds","text":"","title":"Bem vindo a MDS"},{"location":"mds/notas/#1-o-que-e-processo-de-desenvolvimento-de-software","text":"Para Pressman um processo \u00e9 um conjunto de atividades, a\u00e7\u00f5es e tarefas realizadas na cria\u00e7\u00e3o de um produto de trabalho ( work product ). Uma atividade esfor\u00e7a-se para atingir um objetivo amplo (por exemplo, comunicar-\u00adse com os interessados) e \u00e9 utilizada independentemente do campo de aplica\u00e7\u00e3o, do tamanho do projeto, da complexidade de esfor\u00e7os ou do grau de rigor com que a engenharia de software ser\u00e1 aplicada. Na engenharia de software , um processo n\u00e3o \u00e9 uma prescri\u00e7\u00e3o r\u00edgida de como desenvolver um software , mas sim uma abordagem adapt\u00e1vel que possibilita \u00e0s pessoas (a equipe de software ) realizarem o trabalho de selecionar e escolher o conjunto apropriado de a\u00e7\u00f5es e tarefas.","title":"1. O que \u00e9 Processo de Desenvolvimento de Software"},{"location":"mds/notas/#2-o-que-e-modelo-de-processo-de-software","text":"\u00c9 uma representa\u00e7\u00e3o abstrata de um processo de software . Cada modelo representa um processo a partir de uma perspectiva particular. Modelos de processo de software s\u00e3o utilizados para explicar diferentes abordagens do desenvolvimento de software . Definem a sequ\u00eancia em que as atividades do processo ser\u00e3o realizadas. N\u00e3o s\u00e3o descri\u00e7\u00f5es definitivas de processo, mas sim abstra\u00e7\u00f5es \u00fateis, que podem ser usadas em diferentes abordagens.","title":"2. O que \u00e9 modelo de processo de software"},{"location":"mds/notas/#3-fases-do-ciclo-de-vida-de-software","text":"Levantamento de Requisitos: Define as funcionalidades e as necessidades do produto, resultando no escopo e no documento de vis\u00e3o. Podemos separar os requisitos em tr\u00eas categorias: Funcionais: S\u00e3o os requisitos relacionados \u00e0s funcionalidades do software ; N\u00e3o Funcionais: S\u00e3o os requisitos relacionados \u00e0s necessidades do software ; Inversos: S\u00e3o os requisitos que definem o que o software n\u00e3o pode fazer. O objetivo de levantar requisitos \u00e9 guiar o desenvolvimento para que o sistema correto seja feito. Para isso, \u00e9 necess\u00e1rio descrever as condi\u00e7\u00f5es e capacidades do sistema bem o suficiente, de forma a ter um acordo entre cliente e os desenvolvedores do sistema, no quesito do que o sistema deve ou n\u00e3o fazer. O grande desafio dessa etapa \u00e9 que o cliente, mesmo que n\u00e3o seja um especialista da \u00e1rea de computa\u00e7\u00e3o, deve ser capaz de ler e entender os resultados da captura de requisitos. O resultado do levantamento de requisitos tamb\u00e9m ajuda o gestor do projeto a planejar o cronograma do projeto (JACOBSON,2007). Design /Projeto: A atividade de design compreende todo o esfor\u00e7o de concep\u00e7\u00e3o e modelagem que t\u00eam por objetivo descrever como o software ser\u00e1 implementado. O design inclui: O design conceitual: Que envolve a elabora\u00e7\u00e3o das ideias e conceitos b\u00e1sicos que determinam os elementos fundamentais do software em quest\u00e3o. O design conceitual t\u00eam influ\u00eancia na interface do usu\u00e1rio e na arquitetura do software . O design da interface do usu\u00e1rio: Envolve a elabora\u00e7\u00e3o da maneira como o usu\u00e1rio pode interagir para realizar suas tarefas, a escolha dos objetos de interfaces , o layout de janelas e telas, etc. A interface deve garantir a boa usabilidade do software . O design da arquitetura do software : Deve elaborar uma vis\u00e3o macrosc\u00f3pica do software em termos de componentes que interagem entre si. Design dos algoritmos e estruturas de dados: Visa determinar, de maneira independente da linguagem de programa\u00e7\u00e3o adotada, as solu\u00e7\u00f5es algor\u00edtmicas e as estruturas de dados associadas. A fase de Design ou Projeto, \u00e9 a fase final do processo de planejamento e resulta no documento de arquitetura. Implementa\u00e7\u00e3o: Envolve as atividades de codifica\u00e7\u00e3o, compila\u00e7\u00e3o, integra\u00e7\u00e3o e testes. A codifica\u00e7\u00e3o visa traduzir o design em um programa, utilizando linguagens e ferramentas adequadas. A codifica\u00e7\u00e3o deve refletir a estrutura e o comportamento descrito no design . Os componentes arquiteturais devem ser codificados de forma independente e depois integrados. Os testes podem ser iniciados durante a fase de implementa\u00e7\u00e3o. A depura\u00e7\u00e3o de erros ocorre durante a programa\u00e7\u00e3o utilizando algumas t\u00e9cnicas e ferramentas. \u00c9 fundamental um controle e gerenciamento de vers\u00f5es para que se tenha um controle correto de tudo o que est\u00e1 sendo codificado. Verifica\u00e7\u00e3o e Valida\u00e7\u00e3o: Destinam-se a mostrar que o sistema est\u00e1 de acordo com a especifica\u00e7\u00e3o e que ele atende \u00e0s expectativas de clientes e usu\u00e1rios. A valida\u00e7\u00e3o visa assegurar se o programa est\u00e1 fazendo aquilo que foi definido na sua especifica\u00e7\u00e3o. A verifica\u00e7\u00e3o visa verificar se o programa est\u00e1 correto, isto \u00e9, n\u00e3o possui erros de execu\u00e7\u00e3o. Os testes s\u00e3o para corre\u00e7\u00e3o, desempenho e confiabilidade, garantindo a qualidade do software . Manuten\u00e7\u00e3o: A parte de manuten\u00e7\u00e3o envolve melhorar o software a demanda do(s) cliente(s), seja por falhas do programa ou simplesmente por melhorias que o cliente precisa.","title":"3. Fases do ciclo de vida de software"},{"location":"mds/notas/#31-objetivos-de-cada-fase-do-ciclo-de-vida-de-software","text":"Levantamento de Requisitos : Essa fase tem como objetivo unificar a vis\u00e3o do cliente e dos desenvolvedores. Para que isso aconte\u00e7a, s\u00e3o analisados diversos fatores, como por exemplo as funcionalidades que o produto deve possuir, al\u00e9m do objetivo final do produto. Essas an\u00e1lises s\u00e3o feitas de maneira que os desenvolvedores tenham uma vis\u00e3o detalhada do que deve ser produzido. Design Geral : Essa fase consiste no detalhamento de como o software ser\u00e1 desenvolvido, ou seja, a linguagem que ser\u00e1 utilizada, assim como a arquitetura que o projeto dever\u00e1 seguir. Feito isso, espera-se que todos os desenvolvedores tenham vis\u00f5es semelhantes do que deve ser produzido, assim como a maneira que essa produ\u00e7\u00e3o deve ocorrer. Essa etapa \u00e9 crucial, pois sem ela, \u00e9 poss\u00edvel que o projeto inteiro falhe por diverg\u00eancias de vis\u00f5es entre os desenvolvedores.","title":"3.1 Objetivos de cada fase do ciclo de vida de software"},{"location":"mds/notas/#4-estudo-de-caso-da-influencia-do-modelo-de-processo-no-sucesso-de-um-projeto","text":"Resumo do texto: (e podem sugerir outros casos) What Successful Project Managers Do. Atualmente, gerentes de projeto combinam m\u00e9todos tradicionais e \u00e1geis, visando mais flexibilidade e melhores resultados. Gerentes de projeto sempre enfrentar\u00e3o situa\u00e7\u00f5es inesperadas, mesmo tendo o melhor planejamento e gerenciamento de riscos poss\u00edvel. Situa\u00e7\u00f5es como por exemplo, falta de empregados, a fal\u00eancia de um fornecedor, ou mudan\u00e7as de requisitos por parte do cliente.","title":"4. Estudo de caso da influ\u00eancia do modelo de processo no sucesso de um projeto"},{"location":"mds/notas/#5-referencias","text":"Jacobson, I., Booch, G., Rumbaugh, J., Rumbaugh, J., Booch, G. The unified software development process . Reading: Addison-wesley, 2007.","title":"5. Refer\u00eancias"}]}